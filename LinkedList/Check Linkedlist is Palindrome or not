#include<bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* next;

    node(int val){
        data = val;
        next = NULL;
    }
};
void insertAtTail(node* &head,int val){
       node* n = new node(val);
       if(head == NULL)  { 
           head = n;
           return;
       }

       node* temp = head;

       while(temp->next!=NULL){
           temp = temp->next;
       }
       temp->next = n;
}
void insertAtHead(node* &head, int val){
    node* n = new node(val);
    n->next = head;
    head = n;
}
bool palindrome(node* head){
    node* temp = head;

    stack<int>s;

    while(temp!=NULL){
        s.push(temp->data);
        temp = temp->next;
    }
    while(head!=NULL){
        int i = s.top();
        s.pop();
        if(head->data!=i){
            return false;
        }
        head = head->next;
    }
    return true;
}
void display(node* head){
    node* temp = head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp = temp->next;
    }
    cout<<"NULL"<<endl;
}
int main(){
    
        node* head = NULL;
    
    insertAtTail(head,2);
    insertAtTail(head,3);
    insertAtTail(head,3);
    insertAtTail(head,1);
    insertAtTail(head,3);
    insertAtTail(head,3);
    insertAtTail(head,2);
    insertAtTail(head,2);
   
    insertAtHead(head,2);
    display(head);
    cout<<palindrome(head)<<endl;
    
    return 0;
}
